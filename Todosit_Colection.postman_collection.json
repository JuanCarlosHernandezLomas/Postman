{
	"info": {
		"_postman_id": "260296f0-b38d-4cc6-96cb-534d08c7e97e",
		"name": "Todosit_Colection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21136258"
	},
	"item": [
		{
			"name": "GET_all_proyects",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_URL}}/projects",
					"host": [
						"{{base_URL}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add_new_project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jasonData = pm.response.json(); //almacenar la respuesta de mi request en una variable\r",
							"pm.environment.set(\"project_id\", jasonData.id); //setear una varaible de ambiente en una variable anteriormente guardada"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Vacaciones\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_URL}}/projects",
					"host": [
						"{{base_URL}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_Single_projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_URL}}/projects/{{project_id}}",
					"host": [
						"{{base_URL}}"
					],
					"path": [
						"projects",
						"{{project_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update_project",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Things To Buy\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_URL}}/projects/{{project_id}}",
					"host": [
						"{{base_URL}}"
					],
					"path": [
						"projects",
						"{{project_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete_project",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_URL}}/projects/{{project_id}}",
					"host": [
						"{{base_URL}}"
					],
					"path": [
						"projects",
						"{{project_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_Active_Tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_URL}}/tasks",
					"host": [
						"{{base_URL}}"
					],
					"path": [
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create_task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jasonData = pm.response.json();\r",
							"pm.environment.set(\"task_id\", jasonData.id);\r",
							"\r",
							"var schema = {\r",
							"    \"items\": {\r",
							"        \"type\": \"boolean\"\r",
							"    }\r",
							"};\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "X-Request-Id",
						"value": "$(uuidgen)",
						"type": "text"
					},
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "Bearer 0123456789abcdef0123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"content\": \"Buy Milk\", \r\n    \"due_string\": \"Tomorrow at 12:00\",\r\n    \"project_id\": {{project_id}},\r\n    \"priority\": 4\r\n}"
				},
				"url": {
					"raw": "{{base_URL}}/tasks",
					"host": [
						"{{base_URL}}"
					],
					"path": [
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_task",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"content\": \"Buy Milk\", \r\n    \"due_string\": \"Tomorrow at 12:00\",\r\n    \"project_id\": {{project_id}},\r\n    \"priority\": 4\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_URL}}/tasks/{{task_id}}",
					"host": [
						"{{base_URL}}"
					],
					"path": [
						"tasks",
						"{{task_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update_task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"content\": \"Buy Coffee\",\r\n    \"description\": \"buy fresh coffe\",\r\n    \"priority\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_URL}}/tasks/{{task_id}}",
					"host": [
						"{{base_URL}}"
					],
					"path": [
						"tasks",
						"{{task_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Close_Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_URL}}/tasks/{{task_id}}/close",
					"host": [
						"{{base_URL}}"
					],
					"path": [
						"tasks",
						"{{task_id}}",
						"close"
					]
				}
			},
			"response": []
		},
		{
			"name": "Reopen_Task",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{base_URL}}/tasks/{{task_id}}/reopen",
					"host": [
						"{{base_URL}}"
					],
					"path": [
						"tasks",
						"{{task_id}}",
						"reopen"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete_Task",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_URL}}/tasks/{{task_id}}",
					"host": [
						"{{base_URL}}"
					],
					"path": [
						"tasks",
						"{{task_id}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Response time is less than 200ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(200);",
					"});",
					"",
					"pm.test(\"Successful request\", function () {",
					"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
					"});",
					""
				]
			}
		}
	]
}